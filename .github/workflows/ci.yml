name: CI - Frontend

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  # ─────────────────────────────────────────────
  # 1. FRONTEND BUILD
  # ─────────────────────────────────────────────
  build:
    name: Lint & Build frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache frontend node_modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Lint frontend
        working-directory: frontend
        run: npm run lint

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Upload frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

  # ─────────────────────────────────────────────
  # 2. COMPONENT TESTS (Playwright)
  # ─────────────────────────────────────────────
  playwright-component:
    name: Playwright - Component Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache test node_modules
        uses: actions/cache@v4
        with:
          path: tests/node_modules
          key: ${{ runner.os }}-tests-${{ hashFiles('tests/package-lock.json') }}

      - name: Install test dependencies
        working-directory: tests
        run: npm ci

      - name: Install frontend dependencies
        run: npm --prefix frontend ci

      - name: Install Playwright browsers
        working-directory: tests
        run: npx playwright install --with-deps

      - name: Start frontend (Vite)
        run: npm --prefix frontend run dev -- --host 0.0.0.0 --port 5173 &
      
      - name: Wait for frontend (port 5173)
        run: |
          for i in $(seq 1 60); do
            if curl -s http://localhost:5173 > /dev/null 2>&1; then
              echo "✅ Frontend ready on port 5173"
              exit 0
            fi
            echo "⏳ Waiting for frontend..."
            sleep 2
          done
          echo "❌ Frontend did not start in time"
          exit 1

      - name: Run component tests
        working-directory: tests
        run: npm run test:component

      - name: Upload component report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-component
          path: tests/playwright-report/component

  # ─────────────────────────────────────────────
  # 3. API TESTS (OPTIONAL — SKIPPED IF NO DB)
  # ─────────────────────────────────────────────
  playwright-api:
    name: Playwright - API Tests
    runs-on: ubuntu-latest
    if: ${{ env.DB_AVAILABLE == 'true' }}
    needs: build
    env:
      DB_AVAILABLE: false  # Change to true when a CI-accessible DB exists
    steps:
      - name: Skip API tests
        run: echo "Skipping API tests — database not accessible in CI."

  # ─────────────────────────────────────────────
  # 4. E2E TESTS (OPTIONAL — SKIPPED IF NO DB)
  # ─────────────────────────────────────────────
  playwright-e2e:
    name: Playwright - E2E Tests
    runs-on: ubuntu-latest
    if: ${{ env.DB_AVAILABLE == 'true' }}
    needs: build
    env:
      DB_AVAILABLE: false  # Change to true when CI database is ready
    steps:
      - name: Skip E2E tests
        run: echo "Skipping E2E tests — backend/database not accessible in CI."
