{"version":3,"file":"Dashboard-BIb_zNO0.js","sources":["../../../../frontend/src/components/TransactionForm.jsx","../../../../frontend/src/components/TransactionList.jsx","../../../../frontend/src/components/ProfileForm.jsx","../../../../frontend/src/components/Dashboard.jsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\nfunction TransactionForm({ onTransactionAdded, onClose }) {\r\n  const [formData, setFormData] = useState({\r\n    date: new Date().toISOString().split('T')[0],\r\n    description: '',\r\n    amount: '',\r\n    category: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const categories = ['Food', 'Income', 'Groceries', 'Services', 'Entertainment', 'Transport', 'Other'];\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/transactions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          amount: parseFloat(formData.amount)\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        onTransactionAdded(data);\r\n        onClose();\r\n      } else {\r\n        setError(data.error || 'Failed to create transaction');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Network error. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-xl font-bold\">Add Transaction</h2>\r\n          <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={formData.date}\r\n              onChange={(e) => setFormData({...formData, date: e.target.value})}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-yellow-500\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.description}\r\n              onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-yellow-500\"\r\n              placeholder=\"Enter description\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              value={formData.amount}\r\n              onChange={(e) => setFormData({...formData, amount: e.target.value})}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-yellow-500\"\r\n              placeholder=\"Enter amount (negative for expenses)\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Category</label>\r\n            <select\r\n              value={formData.category}\r\n              onChange={(e) => setFormData({...formData, category: e.target.value})}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-yellow-500\"\r\n            >\r\n              <option value=\"\">Select category</option>\r\n              {categories.map(cat => (\r\n                <option key={cat} value={cat}>{cat}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex space-x-3 pt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"flex-1 px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-600 disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Adding...' : 'Add Transaction'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionForm;","function TransactionList({ transactions }) {\r\n  const formatAmount = (amount) => {\r\n    const formatted = Math.abs(amount).toFixed(2);\r\n    return amount >= 0 ? `+$${formatted}` : `-$${formatted}`;\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  if (!transactions || transactions.length === 0) {\r\n    return (\r\n      <div className=\"text-center text-gray-500 py-8\">\r\n        <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n        </svg>\r\n        <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No transactions yet</h3>\r\n        <p className=\"mt-1 text-sm text-gray-500\">Get started by making your first transaction.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-3\">\r\n      {transactions.map((transaction) => (\r\n        <div key={transaction.id} className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className={`w-10 h-10 rounded-full flex items-center justify-center ${\r\n              transaction.amount >= 0 ? 'bg-green-100' : 'bg-red-100'\r\n            }`}>\r\n              {transaction.amount >= 0 ? (\r\n                <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                </svg>\r\n              ) : (\r\n                <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 12H4\" />\r\n                </svg>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <p className=\"font-medium text-gray-900\">{transaction.description}</p>\r\n              <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\r\n                <span>{formatDate(transaction.date)}</span>\r\n                {transaction.category && (\r\n                  <>\r\n                    <span>â€¢</span>\r\n                    <span className=\"px-2 py-1 bg-gray-200 rounded-full text-xs\">\r\n                      {transaction.category}\r\n                    </span>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={`text-lg font-semibold ${\r\n            transaction.amount >= 0 ? 'text-green-600' : 'text-red-600'\r\n          }`}>\r\n            {formatAmount(transaction.amount)}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionList;","import { useState } from 'react';\r\n\r\nfunction ProfileForm({ user, onProfileUpdated, onClose }) {\r\n  const [formData, setFormData] = useState({\r\n    name: user.name || '',\r\n    email: user.email || ''\r\n  });\r\n  const [profilePicture, setProfilePicture] = useState(null);\r\n  const [previewUrl, setPreviewUrl] = useState(user.profileUrl ? `http://localhost:5000${user.profileUrl}` : null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      if (file.size > 5 * 1024 * 1024) {\r\n        setError('File size must be less than 5MB');\r\n        return;\r\n      }\r\n      if (!file.type.startsWith('image/')) {\r\n        setError('Please select an image file');\r\n        return;\r\n      }\r\n      setProfilePicture(file);\r\n      setPreviewUrl(URL.createObjectURL(file));\r\n      setError('');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const formDataToSend = new FormData();\r\n      \r\n      formDataToSend.append('name', formData.name);\r\n      formDataToSend.append('email', formData.email);\r\n      \r\n      if (profilePicture) {\r\n        formDataToSend.append('profilePicture', profilePicture);\r\n      }\r\n\r\n      const response = await fetch('http://localhost:5000/api/profile', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: formDataToSend\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        onProfileUpdated(data.user);\r\n        onClose();\r\n      } else {\r\n        setError(data.error || 'Failed to update profile');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError('Network error. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-xl font-bold\">Update Profile</h2>\r\n          <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {/* Profile Picture */}\r\n          <div className=\"text-center\">\r\n            <div className=\"mb-4\">\r\n              {previewUrl ? (\r\n                <img\r\n                  src={previewUrl}\r\n                  alt=\"Profile preview\"\r\n                  className=\"w-24 h-24 rounded-full mx-auto object-cover border-4 border-gray-200\"\r\n                />\r\n              ) : (\r\n                <div className=\"w-24 h-24 rounded-full mx-auto bg-yellow-400 flex items-center justify-center\">\r\n                  <span className=\"text-2xl font-bold text-black\">\r\n                    {formData.name.charAt(0).toUpperCase()}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <label className=\"cursor-pointer bg-gray-100 hover:bg-gray-200 px-4 py-2 rounded-md text-sm\">\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleFileChange}\r\n                className=\"hidden\"\r\n              />\r\n              Change Photo\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.name}\r\n              onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-yellow-500\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={formData.email}\r\n              onChange={(e) => setFormData({...formData, email: e.target.value})}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-yellow-500\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex space-x-3 pt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"flex-1 px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-600 disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Updating...' : 'Update Profile'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileForm;","import { useState, useEffect } from 'react';\r\nimport TransactionForm from './TransactionForm';\r\nimport TransactionList from './TransactionList';\r\nimport ProfileForm from './ProfileForm';\r\n\r\nfunction Dashboard({ user, onLogout }) {\r\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\r\n  const [showTransactionForm, setShowTransactionForm] = useState(false);\r\n  const [showProfileForm, setShowProfileForm] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(user);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [balance, setBalance] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchTransactions();\r\n    fetchBalance();\r\n  }, []);\r\n\r\n  const fetchTransactions = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/transactions', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setTransactions(data.transactions);\r\n        setBalance(data.currentBalance);\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to fetch transactions:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchBalance = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/transactions/balance', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setBalance(data.balance);\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to fetch balance:', err);\r\n    }\r\n  };\r\n\r\n  const handleTransactionAdded = (data) => {\r\n    setTransactions(prev => [data.transaction, ...prev]);\r\n    setBalance(data.newBalance);\r\n  };\r\n\r\n  const handleProfileUpdated = (updatedUser) => {\r\n    setCurrentUser(updatedUser);\r\n    // Update localStorage\r\n    localStorage.setItem('user', JSON.stringify(updatedUser));\r\n  };\r\n\r\n  const handleDownloadReport = async () => {\r\n    try {\r\n      const currentDate = new Date();\r\n      const year = currentDate.getFullYear();\r\n      const month = currentDate.getMonth() + 1;\r\n      \r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:5000/api/reports/monthly?year=${year}&month=${month}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const blob = await response.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = `monthly-report-${year}-${month.toString().padStart(2, '0')}.pdf`;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n        document.body.removeChild(a);\r\n      } else {\r\n        console.error('Failed to download report');\r\n      }\r\n    } catch (err) {\r\n      console.error('Download error:', err);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    onLogout();\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow-sm border-b border-gray-200\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center h-16\">\r\n            <div className=\"flex items-center\">\r\n              <h1 className=\"text-2xl font-bold text-gray-800\">QuickBank</h1>\r\n            </div>\r\n            \r\n            {/* Profile Menu */}\r\n            <div className=\"relative\">\r\n              <button\r\n                onClick={() => setShowProfileMenu(!showProfileMenu)}\r\n                className=\"flex items-center space-x-3 text-gray-700 hover:text-gray-900 focus:outline-none\"\r\n              >\r\n                {currentUser.profileUrl ? (\r\n                  <img\r\n                    src={`http://localhost:5000${currentUser.profileUrl}`}\r\n                    alt=\"Profile\"\r\n                    className=\"w-8 h-8 rounded-full object-cover\"\r\n                  />\r\n                ) : (\r\n                  <div className=\"w-8 h-8 bg-yellow-400 rounded-full flex items-center justify-center\">\r\n                    <span className=\"text-black font-medium text-sm\">\r\n                      {currentUser.name.charAt(0).toUpperCase()}\r\n                    </span>\r\n                  </div>\r\n                )}\r\n                <span className=\"hidden md:block font-medium\">{currentUser.name}</span>\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                </svg>\r\n              </button>\r\n\r\n              {showProfileMenu && (\r\n                <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50\">\r\n                  <div className=\"px-4 py-2 text-sm text-gray-700 border-b\">\r\n                    <div className=\"font-medium\">{currentUser.name}</div>\r\n                    <div className=\"text-gray-500\">{currentUser.email}</div>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => {\r\n                      setShowProfileForm(true);\r\n                      setShowProfileMenu(false);\r\n                    }}\r\n                    className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                  >\r\n                    Edit Profile\r\n                  </button>\r\n                  <button\r\n                    onClick={handleLogout}\r\n                    className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                  >\r\n                    Sign out\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <div className=\"px-4 py-6 sm:px-0\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\r\n              Welcome to QuickBank, {currentUser.name}!\r\n            </h2>\r\n            <p className=\"text-gray-600 mb-8\">\r\n              Your banking dashboard is ready. Start managing your finances.\r\n            </p>\r\n          </div>\r\n\r\n          {/* Dashboard Cards */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center\">\r\n                  <svg className=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <h3 className=\"text-lg font-medium text-gray-900\">Account Balance</h3>\r\n                  <p className=\"text-2xl font-bold text-gray-900\">\r\n                    ${loading ? '...' : balance.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center\">\r\n                  <svg className=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <h3 className=\"text-lg font-medium text-gray-900\">Transactions</h3>\r\n                  <p className=\"text-2xl font-bold text-gray-900\">{loading ? '...' : transactions.length}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              onClick={handleDownloadReport}\r\n              className=\"bg-white rounded-lg shadow p-6 hover:bg-gray-50 transition-colors w-full text-left\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center\">\r\n                    <svg className=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"ml-4\">\r\n                    <h3 className=\"text-lg font-medium text-gray-900\">Monthly Report</h3>\r\n                    <p className=\"text-sm text-gray-500\">Download PDF report</p>\r\n                  </div>\r\n                </div>\r\n                <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                </svg>\r\n              </div>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Transactions Section */}\r\n          <div className=\"bg-white rounded-lg shadow\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">Recent Transactions</h3>\r\n              <button\r\n                onClick={() => setShowTransactionForm(true)}\r\n                className=\"px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-600 flex items-center space-x-2\"\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                </svg>\r\n                <span>Add Transaction</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              {loading ? (\r\n                <div className=\"text-center py-8\">\r\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-yellow-400 mx-auto\"></div>\r\n                  <p className=\"mt-2 text-gray-600\">Loading transactions...</p>\r\n                </div>\r\n              ) : (\r\n                <TransactionList transactions={transactions} />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Transaction Form Modal */}\r\n          {showTransactionForm && (\r\n            <TransactionForm\r\n              onTransactionAdded={handleTransactionAdded}\r\n              onClose={() => setShowTransactionForm(false)}\r\n            />\r\n          )}\r\n\r\n          {/* Profile Form Modal */}\r\n          {showProfileForm && (\r\n            <ProfileForm\r\n              user={currentUser}\r\n              onProfileUpdated={handleProfileUpdated}\r\n              onClose={() => setShowProfileForm(false)}\r\n            />\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"names":["useState","jsxs","jsx","Fragment","error","useEffect"],"mappings":"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"}