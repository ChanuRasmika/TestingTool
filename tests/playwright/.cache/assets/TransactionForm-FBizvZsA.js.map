{"version":3,"file":"TransactionForm-FBizvZsA.js","sources":["../../../../frontend/src/components/TransactionForm.jsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\nfunction TransactionForm({ onTransactionAdded, onClose }) {\r\n  const [formData, setFormData] = useState({\r\n    date: new Date().toISOString().split('T')[0],\r\n    description: '',\r\n    amount: '',\r\n    category: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const categories = ['Food', 'Income', 'Groceries', 'Services', 'Entertainment', 'Transport', 'Other'];\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/transactions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          amount: parseFloat(formData.amount)\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        onTransactionAdded(data);\r\n        onClose();\r\n      } else {\r\n        setError(data.error || 'Failed to create transaction');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Network error. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-xl font-bold\">Add Transaction</h2>\r\n          <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={formData.date}\r\n              onChange={(e) => setFormData({...formData, date: e.target.value})}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-yellow-500\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.description}\r\n              onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-yellow-500\"\r\n              placeholder=\"Enter description\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              value={formData.amount}\r\n              onChange={(e) => setFormData({...formData, amount: e.target.value})}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-yellow-500\"\r\n              placeholder=\"Enter amount (negative for expenses)\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Category</label>\r\n            <select\r\n              value={formData.category}\r\n              onChange={(e) => setFormData({...formData, category: e.target.value})}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-yellow-500\"\r\n            >\r\n              <option value=\"\">Select category</option>\r\n              {categories.map(cat => (\r\n                <option key={cat} value={cat}>{cat}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex space-x-3 pt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"flex-1 px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-600 disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Adding...' : 'Add Transaction'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionForm;"],"names":["useState","jsxs","jsx"],"mappings":"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"}